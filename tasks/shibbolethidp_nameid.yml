---
- name: configure shibboleth-idp saml-nameid.properties
  lineinfile: dest={{ shibbolethidp_idp_home }}/conf/saml-nameid.properties regexp="^#?\s*({{ item_nameid.option }}\s*=)" backrefs=yes  line="\\1 {{ item_nameid.value }}"
  with_items:
    - { option: 'idp.persistentId.sourceAttribute', value: "{{ shibbolethidp_persistentid_sourceattribute }}", state: present }
    - { option: 'idp.persistentId.salt', value: "{{ shibbolethidp_persistentid_salt }}", state: present }
    - { option: 'idp.persistentId.dataSource', value: "{{ shibbolethidp_persistentid_datasource }}", state: present }
    - { option: 'idp.persistentId.generator', value: "shibboleth.StoredPersistentIdGenerator", state: present }
  loop_control:
    loop_var: item_nameid

- name: Check is PersistentGenerator already configured
  xml:
    file: "{{ shibbolethidp_idp_home }}/conf/saml-nameid.xml"
    xpath: //x:beans/util:list[@id='shibboleth.SAML2NameIDGenerators']/x:ref[@bean='shibboleth.SAML2PersistentGenerator']
    namespaces:
      util: http://www.springframework.org/schema/util
      x: http://www.springframework.org/schema/beans
    count: true
  register: hits

- name: saml-nameid.xml if not already configured. [configured={{ hits.count }}]
  xml:
    file: "{{ shibbolethidp_idp_home }}/conf/saml-nameid.xml"
    xpath: //util:list[@id='shibboleth.SAML2NameIDGenerators']
    #    pretty_print: True
    namespaces:
      util: http://www.springframework.org/schema/util
    add_children:
      - ref:
          bean: shibboleth.SAML2PersistentGenerator
  when: hits.count|int < 1

- name: Check is support mapping SAML2 Persistent NameIDs back to username already configured
  xml:
    file: "{{ shibbolethidp_idp_home }}/conf/c14n/subject-c14n.xml"
    xpath: //x:beans/util:list[@id='shibboleth.SAMLSubjectCanonicalizationFlows']/x:ref[@bean='c14n/SAML2Persistent']
    namespaces:
      util: http://www.springframework.org/schema/util
      x: http://www.springframework.org/schema/beans
    count: true
  register: hits

- name: support mapping SAML2 Persistent NameIDs back to username [configured={{ hits.count }}] OPTIONAL
  xml:
    file: "{{ shibbolethidp_idp_home }}/conf/c14n/subject-c14n.xml"
    xpath: //util:list[@id='shibboleth.SAMLSubjectCanonicalizationFlows']
    #    pretty_print: True
    namespaces:
      util: http://www.springframework.org/schema/util
    add_children:
      - ref:
          bean: c14n/SAML2Persistent
  when: hits.count|int < 1

- name: Shibboleth IdP | Configure | MyDataSource
  blockinfile:
    dest: "{{ shibbolethidp_idp_home }}/conf/global.xml"
    marker: "<!-- {mark} ANSIBLE MANAGED BLOCK -->"
    insertbefore: "</beans>"
    content: |
        <bean id="shibboleth.JPAStorageService.DataSource" class="org.apache.commons.dbcp2.BasicDataSource" p:driverClassName="org.mariadb.jdbc.Driver" 
              p:url="jdbc:mariadb://localhost:3306/idp?autoReconnect=true"
              p:username="{{ shibbolethidp_dbuser }}" p:password="{{ shibbolethidp_dbpassword }}"
              p:maxIdle="5" p:testOnBorrow="true" p:validationQuery="select 1" p:validationQueryTimeout="5" />
         <bean id="shibboleth.JPAStorageService" class="org.opensaml.storage.impl.JPAStorageService"
              p:cleanupInterval="%{idp.storage.cleanupInterval:PT10M}" c:factory-ref="shibboleth.JPAStorageService.entityManagerFactory"/>
         <bean id="shibboleth.JPAStorageService.entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
           <property name="packagesToScan" value="org.opensaml.storage.impl"/>
           <property name="dataSource" ref="shibboleth.JPAStorageService.DataSource"/>
           <property name="jpaVendorAdapter" ref="shibboleth.JPAStorageService.JPAVendorAdapter"/>
           <property name="jpaDialect">
             <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
           </property>
         </bean>

         <bean id="shibboleth.JPAStorageService.JPAVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
           <property name="database" value="MYSQL" />
         </bean>

- shell: mysql < /tmp/idp-schema.sql
  ignore_errors: yes
