- get_url: url="{{ shibbolethidp_hakacrt }}" dest="{{ shibbolethidp_idp_homeÂ }}/credentials/{{ shibbolethidp_hakacrt | basename }}" mode=0755

- file: path={{ shibbolethidp_idp_home }}/metadata/backingFiles state=directory owner=jetty group=jetty recurse=yes mode=0750
 
- name: Add Haka-metadata provider (Haka)
  blockinfile:
    dest: "{{ shibbolethidp_idp_home }}/conf/metadata-providers.xml"
    marker: "<!-- {mark} ANSIBLE MANAGED HAKA METADATA -->"
    insertafter: "<!-- ========================================================================================== -->"
    content: |
      <!-- Metadata is refreshed every hour -->
      <MetadataProvider id="HTTPHakaMetadata" xsi:type="FileBackedHTTPMetadataProvider" 
        refreshDelayFactor="0.5" maxRefreshDelay="PT2H" httpCaching="memory" 
        backingFile="%{idp.home}/metadata/backingFiles/haka-metadata.xml" 
        metadataURL="https://haka.funet.fi/metadata/haka-metadata.xml">
        <MetadataFilter xsi:type="SignatureValidation" certificateFile="%{idp.home}/credentials/{{ shibbolethidp_hakacrt | basename }}" />
        <MetadataFilter xsi:type="EntityRoleWhiteList">
          <RetainedRole>md:SPSSODescriptor</RetainedRole>
        </MetadataFilter>
      </MetadataProvider>

- name: Configure /opt/shibboleth-idp/conf/relaying-party.xml Configure Encryption / Signing
  xml:
    xpath: "{{ item_haka.xpath }}"
    attribute: "{{ item_haka.attribute }}"
    value: "{{ item_haka.value }}"
    ensure: "{{ item_haka.ensure }}"
    file: /opt/shibboleth-idp/conf/relying-party.xml
    namespaces:
      x: http://www.springframework.org/schema/beans
      p: http://www.springframework.org/schema/p
  with_items:
#    - { xpath: "//x:bean[@parent='SAML2.SSO']", attribute: "p:signResponses", value: "false", ensure: present }
    - { xpath: "//x:bean[@parent='SAML2.SSO']", attribute: "p:signAssertions", value: "true", ensure: present }
#    - { xpath: "//x:bean[@parent='SAML2.SSO']", attribute: "p:encryptAssertions", value: "false", ensure: present }
  loop_control:
    loop_var: item_haka
  notify: restart shibboleth-idp
